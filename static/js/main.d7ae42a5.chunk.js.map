{"version":3,"sources":["components/Views/img/GRETA MASK-01.png","components/Views/img/DONALD-01.png","components/Views/img/BATTLE OF POWER-logo-gameboard.svg","components/Views/Home.js","components/Buttons/SquareOne.js","components/Views/BoardOne.js","components/Buttons/SquareTwo.js","components/Views/BoardTwo.js","components/Views/BoardEnemy.js","components/Views/GameBoard.js","actions/action.js","actions/constants.js","App.js","serviceWorker.js","store/initialState.js","common/util/reducerUtils.js","reducers/rootReducer.js","index.js","store/configureStore.js"],"names":["module","exports","Home","start","bind","alert","Container","className","Row","Col","to","Component","SquareOne","propKey","clickFunc","style","height","width","isActive","key","type","onClick","event","BoardOne","props","pieces","renderSquare","handleClick","state","playerOneIsNext","arrayPiecesPlayerOne","background","preventDefault","console","log","this","length","push","target","cellInfo","board","x","y","map","e","xs","SquareTwo","BoardEnemy","actions","incrementCounter","decrementCounter","GameBoard","isOpenBoardTwo","handleBoardTwoIsOpen","setState","prevState","value","data","src","require","alt","connect","test","App","exact","path","component","Boolean","window","location","hostname","match","createReducer","initialState","fnMap","payload","handler","rootReducer","combineReducers","store","createStore","devToolsEnhancer","getState","rootEl","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7ae42a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GRETA MASK-01.2da8cca3.png\";","module.exports = __webpack_public_path__ + \"static/media/DONALD-01.decbbb1e.png\";","module.exports = __webpack_public_path__ + \"static/media/BATTLE OF POWER-logo-gameboard.d4ae7dfe.svg\";","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.start = this.start.bind(this);\r\n  }\r\n  start() {\r\n    // eslint-disable-next-line no-alert\r\n    alert(\"Hola!\");\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"container\">\r\n        <Row className=\"header-home\">\r\n          <h1>BATTLE OF POWERS</h1>\r\n          <h3>The battle to save or destroy the world!</h3>\r\n\r\n          <div className=\"text-content\">\r\n            <p>\r\n              En una imponente guerra épica, donde se enfrenta Greta Thunberg y\r\n              Donald Trump con su poder político, teniendo 2 opciones : poder\r\n              salvar a la Tierra o generar el comienzo de una extinción masiva.\r\n              ¿Existirá realmente el cambio Climático? ¿Se salvará el planeta ?\r\n            </p>\r\n          </div>\r\n          <Col className=\"home-content\">\r\n            <Link to=\"/gameboard\">\r\n              <button className=\"btn-start\">LET THE GAME BEGIN!</button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./SquareOne.css\";\r\n\r\nfunction SquareOne({ propKey, clickFunc, style, height, width, isActive }) {\r\n  return (\r\n    <button\r\n      key={propKey}\r\n      height={height}\r\n      width={width}\r\n      type=\"button\"\r\n      className=\"btn-square1\"\r\n      style={style}\r\n      onClick={event => {\r\n        clickFunc(event, propKey);\r\n      }}\r\n    >\r\n      {isActive}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SquareOne;\r\n","import React, { Component } from \"react\";\r\nimport SquareOne from \"../Buttons/SquareOne\";\r\nimport \"./BoardOne.css\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BoardOne extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.pieces = [];\r\n    this.renderSquare = this.renderSquare.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      playerOneIsNext: true,\r\n      arrayPiecesPlayerOne: this.pieces,\r\n      isActive: false,\r\n      background: \"white\"\r\n    };\r\n  }\r\n\r\n  handleClick(event, propKey) {\r\n    event.preventDefault();\r\n    console.log(\"testeando\", propKey);\r\n    const arrayPiecesPlayerOne = this.state.arrayPiecesPlayerOne;\r\n    console.log(\"arrayPiecesPlayerOne\", arrayPiecesPlayerOne);\r\n\r\n    if (this.pieces.length <= 5) {\r\n      this.pieces.push(propKey);\r\n      console.log(\"Piezas\", this.pieces);\r\n\r\n      event.target.style.background = \"red\";\r\n    } else {\r\n      alert(\" Solo puedes colocar 6 piezas \");\r\n    }\r\n    return this.pieces;\r\n  }\r\n\r\n  // handleSubmit = event => {\r\n  //   event.preventDefault();\r\n  //   //para hacer update del evento\r\n  //   if (this.state.id) {\r\n  //     this.props.updateEvent(this.state);\r\n  //   } else {\r\n  //     //para crear nuevo evento\r\n  //     this.props.createEvent(this.state);\r\n  //   }\r\n  // };\r\n\r\n  renderSquare() {\r\n    let board = [];\r\n    let boardHeight = 5;\r\n    let boardWidth = 5;\r\n    let key;\r\n    let cellInfo;\r\n    for (let x = 0; x < boardHeight; x++) {\r\n      for (let y = 0; y < boardWidth; y++) {\r\n        key = `L${x}${y}`;\r\n        console.log(\"board\", board);\r\n        cellInfo = {\r\n          key: key,\r\n          height: x,\r\n          width: y,\r\n          isActive: false\r\n        };\r\n        board.push(cellInfo);\r\n        console.log(\"cellInfo\", cellInfo);\r\n      }\r\n    }\r\n    return board.map(e => (\r\n      <SquareOne\r\n        key={e.key}\r\n        propKey={e.key}\r\n        clickFunc={this.handleClick}\r\n        style={{ background: this.state.background }}\r\n        height={e.height}\r\n        width={e.width}\r\n        isActive={e.isActive}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col xs=\"10\">\r\n          <div className=\"border1-row\">{this.renderSquare(9)}</div>\r\n        </Col>\r\n        {/* <Col>\r\n          <Link to=\"/\">\r\n            <button className=\"btn-start\">Home</button>\r\n          </Link>\r\n          <button className=\"btn-start\" type=\"submit\">\r\n            BATTLE\r\n          </button>\r\n        </Col> */}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardOne;\r\n","import React from \"react\";\r\nimport \"./SquareTwo.css\";\r\n\r\nfunction SquareTwo({ propKey, clickFunc, style, height, width, isActive }) {\r\n  return (\r\n    <button\r\n      key={propKey}\r\n      height={height}\r\n      width={width}\r\n      type=\"button\"\r\n      className=\"btn-square1\"\r\n      style={style}\r\n      onClick={event => {\r\n        clickFunc(event, propKey);\r\n      }}\r\n    >\r\n      {isActive}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SquareTwo;\r\n","import React, { Component } from \"react\";\r\nimport SquareTwo from \"../Buttons/SquareTwo\";\r\nimport \"./BoardTwo.css\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nclass BoardTwo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.piecesTwo = [];\r\n    this.renderSquare = this.renderSquare.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      playerOneIsNext: true,\r\n      arrayPiecesPlayerOne: this.piecesTwo,\r\n      isActive: false,\r\n      background: \"white\"\r\n    };\r\n  }\r\n\r\n  handleClick(event, propKey) {\r\n    console.log(\"testeando\", propKey);\r\n    const arrayPiecesPlayerOne = this.state.arrayPiecesPlayerOne;\r\n    console.log(\"arrayPiecesPlayerOne\", arrayPiecesPlayerOne);\r\n\r\n    if (this.piecesTwo.length <= 5) {\r\n      this.piecesTwo.push(propKey);\r\n      console.log(\"Piezas\", this.piecesTwo);\r\n\r\n      event.target.style.background = \"red\";\r\n    } else {\r\n      alert(\" Solo puedes colocar 6 piezas \");\r\n    }\r\n    return this.piecesTwo;\r\n  }\r\n\r\n  renderSquare() {\r\n    let board = [];\r\n    let boardHeight = 5;\r\n    let boardWidth = 5;\r\n    let key;\r\n    let cellInfo;\r\n    for (let x = 0; x < boardHeight; x++) {\r\n      for (let y = 0; y < boardWidth; y++) {\r\n        key = `R${x}${y}`;\r\n        console.log(\"board\", board);\r\n        cellInfo = {\r\n          key: key,\r\n          height: x,\r\n          width: y,\r\n          isActive: false\r\n        };\r\n        board.push(cellInfo);\r\n        console.log(\"cellInfo\", cellInfo);\r\n      }\r\n    }\r\n    return board.map(e => (\r\n      <SquareTwo\r\n        key={e.key}\r\n        propKey={e.key}\r\n        clickFunc={this.handleClick}\r\n        style={{ background: this.state.background }}\r\n        height={e.height}\r\n        width={e.width}\r\n        isActive={e.isActive}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board-me\">\r\n        <Container>\r\n          <div className=\"border2-row\">{this.renderSquare(9)}</div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardTwo;\r\n","import React, { Component } from \"react\";\r\nimport SquareOne from \"../Buttons/SquareOne\";\r\nimport \"./BoardEnemy.css\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BoardEnemy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.pieces = [];\r\n    this.renderSquare = this.renderSquare.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      playerOneIsNext: true,\r\n      arrayPiecesPlayerOne: this.pieces,\r\n      isActive: false,\r\n      background: \"white\"\r\n    };\r\n  }\r\n\r\n  handleClick(event, propKey) {\r\n    event.preventDefault();\r\n    console.log(\"testeando\", propKey);\r\n  }\r\n\r\n  renderSquare() {\r\n    let board = [];\r\n    let boardHeight = 5;\r\n    let boardWidth = 5;\r\n    let key;\r\n    let cellInfo;\r\n    for (let x = 0; x < boardHeight; x++) {\r\n      for (let y = 0; y < boardWidth; y++) {\r\n        key = `Enemy${x}${y}`;\r\n        console.log(\"board\", board);\r\n        cellInfo = {\r\n          key: key,\r\n          height: x,\r\n          width: y,\r\n          isActive: false\r\n        };\r\n        board.push(cellInfo);\r\n        console.log(\"cellInfo\", cellInfo);\r\n      }\r\n    }\r\n    return board.map(e => (\r\n      <SquareOne\r\n        key={e.key}\r\n        propKey={e.key}\r\n        clickFunc={this.handleClick}\r\n        style={{ background: this.state.background }}\r\n        height={e.height}\r\n        width={e.width}\r\n        isActive={e.isActive}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col xs=\"10\">\r\n          <div className=\"boardEnemy\">{this.renderSquare(9)}</div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardEnemy;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport BoardOne from \"./BoardOne\";\r\nimport BoardTwo from \"./BoardTwo\";\r\nimport \"./GameBoard.css\";\r\nimport { Col, Row, Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { incrementCounter, decrementCounter } from \"../../actions/action\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BoardEnemy from \"./BoardEnemy\";\r\n//lee la data que está en testReducerGame.js\r\nconst mapState = state => ({\r\n  data: state.test.data\r\n});\r\n\r\nconst actions = {\r\n  incrementCounter,\r\n  decrementCounter\r\n};\r\n\r\nclass GameBoard extends Component {\r\n  state = {\r\n    isOpenBoardTwo: false\r\n  };\r\n\r\n  // open and close in the same button \"Create Event\"\r\n  handleBoardTwoIsOpen = () => {\r\n    this.setState(prevState => ({\r\n      isOpenBoardTwo: !prevState.isOpenBoardTwo\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      incrementCounter,\r\n      decrementCounter,\r\n\r\n      value,\r\n      propKey\r\n    } = this.props;\r\n\r\n    const { isOpenBoardTwo } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Col className=\"game\">\r\n          <Col className=\"game-board\">\r\n            <img\r\n              className=\"logo\"\r\n              src={require(\"../Views/img/BATTLE OF POWER-logo-gameboard.svg\")}\r\n              alt=\"logo-room\"\r\n            />\r\n            <div className=\"table\">\r\n              <Row>\r\n                <Col xs=\"4\">\r\n                  <img\r\n                    className=\"faces\"\r\n                    src={require(\"./img/GRETA MASK-01.png\")}\r\n                    alt=\"greta\"\r\n                  />\r\n                  <p>Greta | My board</p>\r\n\r\n                  <BoardOne\r\n                    className=\"home-content\"\r\n                    propKey={propKey}\r\n                    value={value}\r\n                  />\r\n                </Col>\r\n                <Col xs=\"4\">\r\n                  <button\r\n                    className=\"btn-start\"\r\n                    onClick={this.handleBoardTwoIsOpen}\r\n                  >\r\n                    BATTLE\r\n                  </button>\r\n                </Col>\r\n                <Col xs=\"4\">\r\n                  <img\r\n                    className=\"faces\"\r\n                    src={require(\"./img/DONALD-01.png\")}\r\n                    alt=\"trump\"\r\n                  />\r\n                  <p> Donald | Board Enemy </p>\r\n                  {isOpenBoardTwo && (\r\n                    <BoardEnemy\r\n                      className=\"home-content\"\r\n                      propKey={propKey}\r\n                      value={value}\r\n                    />\r\n                  )}\r\n                  {/* <BoardTwo\r\n                    className=\"home-content\"\r\n                    propKey={propKey}\r\n                    value={value}\r\n                  /> */}\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n            <Row>\r\n              <div className=\"table\">\r\n                <Row>\r\n                  <Col xs=\"4\">\r\n                    <img\r\n                      className=\"faces\"\r\n                      src={require(\"./img/DONALD-01.png\")}\r\n                      alt=\"trump\"\r\n                    />\r\n                    <p>Donald | My Board</p>\r\n                    <BoardOne\r\n                      className=\"home-content\"\r\n                      propKey={propKey}\r\n                      value={value}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"4\">\r\n                    <button\r\n                      className=\"btn-start\"\r\n                      onClick={this.handleBoardTwoIsOpen}\r\n                    >\r\n                      BATTLE\r\n                    </button>\r\n                  </Col>\r\n                  <Col xs=\"4\">\r\n                    <img\r\n                      className=\"faces\"\r\n                      src={require(\"./img/GRETA MASK-01.png\")}\r\n                      alt=\"greta\"\r\n                    />\r\n                    <p> Greta | Board Enemy </p>\r\n                    {isOpenBoardTwo && (\r\n                      <BoardEnemy\r\n                        className=\"home-content\"\r\n                        propKey={propKey}\r\n                        value={value}\r\n                      />\r\n                    )}\r\n                    {/* <BoardTwo\r\n                    className=\"home-content\"\r\n                    propKey={propKey}\r\n                    value={value}\r\n                  /> */}\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Row>\r\n          </Col>\r\n        </Col>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapState, actions)(GameBoard);\r\n","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"./constants\";\r\n\r\nexport const incrementCounter = () => {\r\n  return {\r\n    type: INCREMENT_COUNTER\r\n  };\r\n};\r\n\r\nexport const decrementCounter = () => {\r\n  return {\r\n    type: DECREMENT_COUNTER\r\n  };\r\n};\r\n","export const INCREMENT_COUNTER = \"INCREMENT_COUNTER\";\r\nexport const DECREMENT_COUNTER = \"DECREMENT_COUNTER\";\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport { Col, Row, Container } from \"reactstrap\";\r\nimport Home from \"../src/components/Views/Home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport GameBoard from \"../src/components/Views/GameBoard\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <main className=\"App\">\r\n          <Route path=\"/gameboard\" component={GameBoard} />\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"../actions/constants\";\r\nimport { createReducer } from \"../common/util/reducerUtils\";\r\n\r\nconst initialState = {\r\n  data: 2\r\n};\r\n\r\nconst incrementCounter = state => {\r\n  return { ...state, data: state.data + 1 };\r\n};\r\n\r\nconst decrementCounter = state => {\r\n  return { ...state, data: state.data - 1 };\r\n};\r\n\r\n//manera 1 de hacer la misma funcion\r\n// const testReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case INCREMENT_COUNTER:\r\n//       return { ...state, data: state.data + 1 };\r\n//     case DECREMENT_COUNTER:\r\n//       return { ...state, data: state.data - 1 };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default createReducer(initialState, {\r\n  [INCREMENT_COUNTER]: incrementCounter,\r\n  [DECREMENT_COUNTER]: decrementCounter\r\n});\r\n","export const createReducer = (initialState, fnMap) => {\r\n  return (state = initialState, { type, payload }) => {\r\n    const handler = fnMap[type];\r\n    return handler ? handler(state, payload) : state;\r\n  };\r\n};\r\n","//funciona index.js de reducer\r\n\r\nimport { combineReducers } from \"redux\";\r\n// import testReducerGame from \"../store/initialState\";\r\nimport initialState from \"../store/initialState\";\r\n\r\nconst rootReducer = combineReducers({\r\n  test: initialState\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { configureStore } from \"../src/store/configureStore\";\r\n\r\n//toma las configuraciones de store\r\nconst store = configureStore();\r\nconsole.log(store.getState());\r\n\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\nconst rootEl = document.getElementById(\"root\");\r\nlet render = () => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>,\r\n    rootEl\r\n  );\r\n};\r\n\r\nif (module.hot) {\r\n  module.hot.accept(\"./App\", () => {\r\n    setTimeout(render);\r\n  });\r\n}\r\n\r\nrender();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore } from \"redux\";\r\n// import testReducerGame from \"./testReducerGame\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\n\r\nexport const configureStore = () => {\r\n  const store = createStore(rootReducer, devToolsEnhancer());\r\n  return store;\r\n};\r\n"],"sourceRoot":""}