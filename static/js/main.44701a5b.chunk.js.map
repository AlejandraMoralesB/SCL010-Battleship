{"version":3,"sources":["components/Views/img/BATTLE OF POWER-logo-gameboard.svg","components/Views/img/GRETA MASK-01.png","components/Views/img/DONALD-01.png","components/Views/Home.js","components/Buttons/SquareOne.js","components/Views/BoardOne.js","components/Buttons/SquareTwo.js","components/Views/BoardTwo.js","components/Views/BoardEnemy.js","components/Views/GameBoard.js","actions/action.js","actions/constants.js","App.js","serviceWorker.js","store/initialState.js","common/util/reducerUtils.js","reducers/rootReducer.js","index.js","store/configureStore.js"],"names":["module","exports","Home","start","bind","alert","Container","className","id","src","require","alt","Col","to","Component","SquareOne","propKey","clickFunc","style","height","width","isActive","key","type","onClick","event","BoardOne","props","pieces","renderSquare","handleClick","state","playerOneIsNext","arrayPiecesPlayerOne","background","preventDefault","console","log","this","length","push","target","cellInfo","board","x","y","map","e","Row","xs","SquareTwo","BoardEnemy","actions","incrementCounter","decrementCounter","GameBoard","isOpenBoardTwo","handleBoardTwoIsOpen","setState","prevState","value","data","connect","test","App","exact","path","component","Boolean","window","location","hostname","match","createReducer","initialState","fnMap","payload","handler","rootReducer","combineReducers","store","createStore","devToolsEnhancer","getState","rootEl","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44701a5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BATTLE OF POWER-logo-gameboard.d4ae7dfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/GRETA MASK-01.2da8cca3.png\";","module.exports = __webpack_public_path__ + \"static/media/DONALD-01.decbbb1e.png\";","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.start = this.start.bind(this);\r\n  }\r\n  start() {\r\n    // eslint-disable-next-line no-alert\r\n    alert(\"Hola!\");\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"container\">\r\n        <img\r\n          id=\"logo\"\r\n          src={require(\"../Views/img/BATTLE OF POWER-logo-gameboard.svg\")}\r\n          alt=\"logo-room\"\r\n        />\r\n        <Col className=\"Sub-title\">\r\n          <p>YOU CAN SAVE OR DESTROY THE WORLD!!</p>\r\n        </Col>\r\n        <Col className=\"text-content\">\r\n          <p>Will there really be climate Change? Will the planet be Saved?</p>\r\n        </Col>\r\n        <Col className=\"home-content\">\r\n          <Link to=\"/gameboard\">\r\n            <button className=\"btn-play\"> START </button>\r\n          </Link>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./SquareOne.css\";\r\n\r\nfunction SquareOne({ propKey, clickFunc, style, height, width, isActive }) {\r\n  return (\r\n    <button\r\n      key={propKey}\r\n      height={height}\r\n      width={width}\r\n      type=\"button\"\r\n      className=\"btn-square1\"\r\n      style={style}\r\n      onClick={event => {\r\n        clickFunc(event, propKey);\r\n      }}\r\n    >\r\n      {isActive}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SquareOne;\r\n","import React, { Component } from \"react\";\r\nimport SquareOne from \"../Buttons/SquareOne\";\r\nimport \"./BoardOne.css\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BoardOne extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.pieces = [];\r\n    this.renderSquare = this.renderSquare.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      playerOneIsNext: true,\r\n      arrayPiecesPlayerOne: this.pieces,\r\n      isActive: false,\r\n      background: \"white\"\r\n    };\r\n  }\r\n\r\n  handleClick(event, propKey) {\r\n    event.preventDefault();\r\n    console.log(\"testeando\", propKey);\r\n    const arrayPiecesPlayerOne = this.state.arrayPiecesPlayerOne;\r\n    console.log(\"arrayPiecesPlayerOne\", arrayPiecesPlayerOne);\r\n\r\n    if (this.pieces.length <= 5) {\r\n      this.pieces.push(propKey);\r\n      console.log(\"Piezas\", this.pieces);\r\n\r\n      event.target.style.background = \"red\";\r\n    } else {\r\n      alert(\" Solo puedes colocar 6 piezas \");\r\n    }\r\n    return this.pieces;\r\n  }\r\n\r\n  renderSquare() {\r\n    let board = [];\r\n    let boardHeight = 5;\r\n    let boardWidth = 5;\r\n    let key;\r\n    let cellInfo;\r\n    for (let x = 0; x < boardHeight; x++) {\r\n      for (let y = 0; y < boardWidth; y++) {\r\n        key = `L${x}${y}`;\r\n        console.log(\"board\", board);\r\n        cellInfo = {\r\n          key: key,\r\n          height: x,\r\n          width: y,\r\n          isActive: false\r\n        };\r\n        board.push(cellInfo);\r\n        console.log(\"cellInfo\", cellInfo);\r\n      }\r\n    }\r\n    return board.map(e => (\r\n      <SquareOne\r\n        key={e.key}\r\n        propKey={e.key}\r\n        clickFunc={this.handleClick}\r\n        style={{ background: this.state.background }}\r\n        height={e.height}\r\n        width={e.width}\r\n        isActive={e.isActive}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col xs=\"10\">\r\n          <div className=\"border1-row\">{this.renderSquare(9)}</div>\r\n        </Col>\r\n        {/* <Col>\r\n          <Link to=\"/\">\r\n            <button className=\"btn-start\">Home</button>\r\n          </Link>\r\n          <button className=\"btn-start\" type=\"submit\">\r\n            BATTLE\r\n          </button>\r\n        </Col> */}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardOne;\r\n","import React from \"react\";\r\nimport \"./SquareTwo.css\";\r\n\r\nfunction SquareTwo({ propKey, clickFunc, style, height, width, isActive }) {\r\n  return (\r\n    <button\r\n      key={propKey}\r\n      height={height}\r\n      width={width}\r\n      type=\"button\"\r\n      className=\"btn-square1\"\r\n      style={style}\r\n      onClick={event => {\r\n        clickFunc(event, propKey);\r\n      }}\r\n    >\r\n      {isActive}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SquareTwo;\r\n","import React, { Component } from \"react\";\r\nimport SquareTwo from \"../Buttons/SquareTwo\";\r\nimport \"./BoardTwo.css\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nclass BoardTwo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.piecesTwo = [];\r\n    this.renderSquare = this.renderSquare.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      playerOneIsNext: true,\r\n      arrayPiecesPlayerOne: this.piecesTwo,\r\n      isActive: false,\r\n      background: \"white\"\r\n    };\r\n  }\r\n\r\n  handleClick(event, propKey) {\r\n    console.log(\"testeando\", propKey);\r\n    const arrayPiecesPlayerOne = this.state.arrayPiecesPlayerOne;\r\n    console.log(\"arrayPiecesPlayerOne\", arrayPiecesPlayerOne);\r\n\r\n    if (this.piecesTwo.length <= 5) {\r\n      this.piecesTwo.push(propKey);\r\n      console.log(\"Piezas\", this.piecesTwo);\r\n\r\n      event.target.style.background = \"red\";\r\n    } else {\r\n      alert(\" Solo puedes colocar 6 piezas \");\r\n    }\r\n    return this.piecesTwo;\r\n  }\r\n\r\n  renderSquare() {\r\n    let board = [];\r\n    let boardHeight = 5;\r\n    let boardWidth = 5;\r\n    let key;\r\n    let cellInfo;\r\n    for (let x = 0; x < boardHeight; x++) {\r\n      for (let y = 0; y < boardWidth; y++) {\r\n        key = `R${x}${y}`;\r\n        console.log(\"board\", board);\r\n        cellInfo = {\r\n          key: key,\r\n          height: x,\r\n          width: y,\r\n          isActive: false\r\n        };\r\n        board.push(cellInfo);\r\n        console.log(\"cellInfo\", cellInfo);\r\n      }\r\n    }\r\n    return board.map(e => (\r\n      <SquareTwo\r\n        key={e.key}\r\n        propKey={e.key}\r\n        clickFunc={this.handleClick}\r\n        style={{ background: this.state.background }}\r\n        height={e.height}\r\n        width={e.width}\r\n        isActive={e.isActive}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board-me\">\r\n        <Container>\r\n          <div className=\"border2-row\">{this.renderSquare(9)}</div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardTwo;\r\n","import React, { Component } from \"react\";\r\nimport SquareOne from \"../Buttons/SquareOne\";\r\nimport \"./BoardEnemy.css\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BoardEnemy extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.pieces = [];\r\n    this.renderSquare = this.renderSquare.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      playerOneIsNext: true,\r\n      arrayPiecesPlayerOne: this.pieces,\r\n      isActive: false,\r\n      background: \"white\"\r\n    };\r\n  }\r\n\r\n  handleClick(event, propKey) {\r\n    event.preventDefault();\r\n    console.log(\"testeando\", propKey);\r\n  }\r\n\r\n  renderSquare() {\r\n    let board = [];\r\n    let boardHeight = 5;\r\n    let boardWidth = 5;\r\n    let key;\r\n    let cellInfo;\r\n    for (let x = 0; x < boardHeight; x++) {\r\n      for (let y = 0; y < boardWidth; y++) {\r\n        key = `Enemy${x}${y}`;\r\n        console.log(\"board\", board);\r\n        cellInfo = {\r\n          key: key,\r\n          height: x,\r\n          width: y,\r\n          isActive: false\r\n        };\r\n        board.push(cellInfo);\r\n        console.log(\"cellInfo\", cellInfo);\r\n      }\r\n    }\r\n    return board.map(e => (\r\n      <SquareOne\r\n        key={e.key}\r\n        propKey={e.key}\r\n        clickFunc={this.handleClick}\r\n        style={{ background: this.state.background }}\r\n        height={e.height}\r\n        width={e.width}\r\n        isActive={e.isActive}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col xs=\"10\">\r\n          <div className=\"boardEnemy\">{this.renderSquare(9)}</div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardEnemy;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport BoardOne from \"./BoardOne\";\r\nimport BoardTwo from \"./BoardTwo\";\r\nimport \"./GameBoard.css\";\r\nimport { Col, Row, Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { incrementCounter, decrementCounter } from \"../../actions/action\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BoardEnemy from \"./BoardEnemy\";\r\n//lee la data que está en testReducerGame.js\r\nconst mapState = state => ({\r\n  data: state.test.data\r\n});\r\n\r\nconst actions = {\r\n  incrementCounter,\r\n  decrementCounter\r\n};\r\n\r\nclass GameBoard extends Component {\r\n  state = {\r\n    isOpenBoardTwo: false\r\n  };\r\n\r\n  // open and close in the same button \"Create Event\"\r\n  handleBoardTwoIsOpen = () => {\r\n    this.setState(prevState => ({\r\n      isOpenBoardTwo: !prevState.isOpenBoardTwo\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      incrementCounter,\r\n      decrementCounter,\r\n\r\n      value,\r\n      propKey\r\n    } = this.props;\r\n\r\n    const { isOpenBoardTwo } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Col className=\"game\">\r\n          <Col className=\"game-board\">\r\n            <img\r\n              className=\"logo\"\r\n              src={require(\"../Views/img/BATTLE OF POWER-logo-gameboard.svg\")}\r\n              alt=\"logo-room\"\r\n            />\r\n            <div className=\"table\">\r\n              <Row>\r\n                <Col xs=\"4\">\r\n                  <img\r\n                    className=\"faces\"\r\n                    src={require(\"./img/GRETA MASK-01.png\")}\r\n                    alt=\"greta\"\r\n                  />\r\n                  <p>Greta | My board</p>\r\n\r\n                  <BoardOne\r\n                    className=\"home-content\"\r\n                    propKey={propKey}\r\n                    value={value}\r\n                  />\r\n                </Col>\r\n                <Col xs=\"4\">\r\n                  <button\r\n                    className=\"btn-start\"\r\n                    onClick={this.handleBoardTwoIsOpen}\r\n                  >\r\n                    BATTLE\r\n                  </button>\r\n                </Col>\r\n                <Col xs=\"4\">\r\n                  <img\r\n                    className=\"faces\"\r\n                    src={require(\"./img/DONALD-01.png\")}\r\n                    alt=\"trump\"\r\n                  />\r\n                  <p> Donald | Board Enemy </p>\r\n                  {isOpenBoardTwo && (\r\n                    <BoardEnemy\r\n                      className=\"home-content\"\r\n                      propKey={propKey}\r\n                      value={value}\r\n                    />\r\n                  )}\r\n                  {/* <BoardTwo\r\n                    className=\"home-content\"\r\n                    propKey={propKey}\r\n                    value={value}\r\n                  /> */}\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n            <Row>\r\n              <div className=\"table\">\r\n                <Row>\r\n                  <Col xs=\"4\">\r\n                    <img\r\n                      className=\"faces\"\r\n                      src={require(\"./img/DONALD-01.png\")}\r\n                      alt=\"trump\"\r\n                    />\r\n                    <p>Donald | My Board</p>\r\n                    <BoardOne\r\n                      className=\"home-content\"\r\n                      propKey={propKey}\r\n                      value={value}\r\n                    />\r\n                  </Col>\r\n                  <Col xs=\"4\">\r\n                    <button\r\n                      className=\"btn-start\"\r\n                      onClick={this.handleBoardTwoIsOpen}\r\n                    >\r\n                      BATTLE\r\n                    </button>\r\n                  </Col>\r\n                  <Col xs=\"4\">\r\n                    <img\r\n                      className=\"faces\"\r\n                      src={require(\"./img/GRETA MASK-01.png\")}\r\n                      alt=\"greta\"\r\n                    />\r\n                    <p> Greta | Board Enemy </p>\r\n                    {isOpenBoardTwo && (\r\n                      <BoardEnemy\r\n                        className=\"home-content\"\r\n                        propKey={propKey}\r\n                        value={value}\r\n                      />\r\n                    )}\r\n                    {/* <BoardTwo\r\n                    className=\"home-content\"\r\n                    propKey={propKey}\r\n                    value={value}\r\n                  /> */}\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Row>\r\n          </Col>\r\n        </Col>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapState, actions)(GameBoard);\r\n","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"./constants\";\r\n\r\nexport const incrementCounter = () => {\r\n  return {\r\n    type: INCREMENT_COUNTER\r\n  };\r\n};\r\n\r\nexport const decrementCounter = () => {\r\n  return {\r\n    type: DECREMENT_COUNTER\r\n  };\r\n};\r\n","export const INCREMENT_COUNTER = \"INCREMENT_COUNTER\";\r\nexport const DECREMENT_COUNTER = \"DECREMENT_COUNTER\";\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport { Col, Row, Container } from \"reactstrap\";\r\nimport Home from \"../src/components/Views/Home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport GameBoard from \"../src/components/Views/GameBoard\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <main className=\"App\">\r\n          <Route path=\"/gameboard\" component={GameBoard} />\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"../actions/constants\";\r\nimport { createReducer } from \"../common/util/reducerUtils\";\r\n\r\nconst initialState = {\r\n  data: 2\r\n};\r\n\r\nconst incrementCounter = state => {\r\n  return { ...state, data: state.data + 1 };\r\n};\r\n\r\nconst decrementCounter = state => {\r\n  return { ...state, data: state.data - 1 };\r\n};\r\n\r\n//manera 1 de hacer la misma funcion\r\n// const testReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case INCREMENT_COUNTER:\r\n//       return { ...state, data: state.data + 1 };\r\n//     case DECREMENT_COUNTER:\r\n//       return { ...state, data: state.data - 1 };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default createReducer(initialState, {\r\n  [INCREMENT_COUNTER]: incrementCounter,\r\n  [DECREMENT_COUNTER]: decrementCounter\r\n});\r\n","export const createReducer = (initialState, fnMap) => {\r\n  return (state = initialState, { type, payload }) => {\r\n    const handler = fnMap[type];\r\n    return handler ? handler(state, payload) : state;\r\n  };\r\n};\r\n","//funciona index.js de reducer\r\n\r\nimport { combineReducers } from \"redux\";\r\n// import testReducerGame from \"../store/initialState\";\r\nimport initialState from \"../store/initialState\";\r\n\r\nconst rootReducer = combineReducers({\r\n  test: initialState\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { configureStore } from \"../src/store/configureStore\";\r\n\r\n//toma las configuraciones de store\r\nconst store = configureStore();\r\nconsole.log(store.getState());\r\n\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\nconst rootEl = document.getElementById(\"root\");\r\nlet render = () => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>,\r\n    rootEl\r\n  );\r\n};\r\n\r\nif (module.hot) {\r\n  module.hot.accept(\"./App\", () => {\r\n    setTimeout(render);\r\n  });\r\n}\r\n\r\nrender();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore } from \"redux\";\r\n// import testReducerGame from \"./testReducerGame\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\n\r\nexport const configureStore = () => {\r\n  const store = createStore(rootReducer, devToolsEnhancer());\r\n  return store;\r\n};\r\n"],"sourceRoot":""}